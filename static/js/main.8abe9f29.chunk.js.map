{"version":3,"sources":["logo.svg","api/Score.js","components/Footer.js","components/Rules.js","api/Cards.js","components/GameArea.js","components/GameContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getHighScore","localStorage","getItem","updateHighScore","prevScore","score","Math","max","setItem","Footer","rule","activeCard","isNot","highScore","className","Rules","text","obj","activeCards","lastNames","map","card","lastName","sort","cardRender","imgCard","txt","preferredName","firstName","imgPrompt","txtCard","division","jobTitle","src","process","photoUrl","alt","displayName","getCards","source","a","fetch","response","json","cards","GameArea","clickHandler","displayStats","Name","Herd","Title","useState","clicked","setClicked","hasCorrect","some","isCorrect","index","classes","onClick","e","length","setTimeout","nextTurn","key","Object","entries","value","shuffle","array","t","i","m","floor","random","GameContainer","props","state","currentRule","changeRule","gradedCards","slice","setState","newGame","numRules","min","possibleCards","numGames","isNaN","parseInt","updateNumGames","endGame","bind","selectedSource","this","then","console","log","setupGame","Fragment","startNewGame","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8abe9f29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9b1b5ea4.svg\";","const HIGHSCORE = 'FN_HIGHSCORE';\n\nconst getHighScore = () =>{\n    return localStorage.getItem(HIGHSCORE) || 0\n};\n\nconst setHighScore = score =>{\n\n    localStorage.setItem(HIGHSCORE, score)\n};\n\nconst updateHighScore = prevScore =>{\n    setHighScore(\n        Math.max(\n            prevScore,\n            getHighScore()\n        )\n    )\n};\n\nconst updateNumGames = () =>{\n    let numGames = localStorage.getItem('FN_NUM_GAMES') || '0';\n    numGames = isNaN(numGames) ? 1 : parseInt(numGames, 10) + 1;\n\n    localStorage.setItem('FN_NUM_GAMES', numGames)\n};\n\nexport {\n    getHighScore,\n    setHighScore,\n    updateHighScore,\n    updateNumGames,\n\n}\n","import React from 'react';\nimport {getHighScore} from \"../api/Score\";\n\nconst Footer = ({rule, activeCard, isNot, score, prevScore}) =>{\n\n    const highScore = getHighScore();\n    return(\n        <div className={'footer'}>\n            <div>\n                Current Score: {score}\n            </div>\n            {prevScore &&\n                <div>\n                    Previous Score: {prevScore}\n                </div>\n            }\n            {highScore > 0 &&\n                <div>\n                    High Score: {highScore}\n                </div>\n            }\n\n\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\n\nconst Rules =[\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not first' : 'First'} alphabetically by last name`},\n        rule: (obj, activeCard, activeCards)=>{\n            let lastNames = activeCards.map((card)=>{return card.lastName });\n            lastNames.sort();\n            return obj.lastName === lastNames[0];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not' : ''} ${obj.txt}`},\n        rule: (obj, activeCard)=>{\n            return obj.txt === activeCard.txt\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not' : ''} ${obj.preferredName || obj.firstName}`},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return imgPrompt(obj, isNot)},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return txtCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not' : ''} last name of ${obj.lastName}`},\n        rule: (obj, activeCard)=>{\n            return obj.lastName === activeCard.lastName\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not' : ''} ${obj.division}`},\n        rule: (obj, activeCard)=>{\n            return obj.division === activeCard.division\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not' : ''} ${obj.jobTitle}`},\n        rule: (obj, activeCard)=>{\n            return obj.jobTitle === activeCard.jobTitle\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not first' : 'First'} alphabetically by last name`},\n        rule: (obj, activeCard, activeCards)=>{\n            let lastNames = activeCards.map((card)=>{return card.lastName });\n            lastNames.sort();\n            return obj.lastName === lastNames[0];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n\n];\n\nconst imgPrompt = (obj, isNot) =>{\n    return (\n        <div>\n            {isNot ? 'not' : ''}\n            <img src={process.env.PUBLIC_URL + '/' + obj.photoUrl } alt={obj.displayName}/>\n        </div>\n    )\n};\n\nconst imgCard = (card) =>{\n    return (\n        <img src={process.env.PUBLIC_URL + '/' + card.photoUrl } alt={card.displayName}/>\n    )\n};\n\nconst txtCard = (card) =>{\n    return <button>{card.txt}</button>\n};\n\nexport default  Rules;\n","const getCards = async source =>{\n\n    const response = await fetch(process.env.PUBLIC_URL + `/fearless.json`);\n    const json = await response.json();\n    return json.cards;\n\n};\n\nexport {\n    getCards,\n}\n","import React, { useState } from 'react';\n\nconst GameArea = ({cards, clickHandler, rule}) =>{\n    const displayStats = {\n        Name: 'txt',\n        Herd: 'division',\n        Title: 'jobTitle'\n\n    };\n    const [clicked, setClicked] = useState(null);\n    let hasCorrect = cards.some((card)=>{ return card.isCorrect});\n    const nextTurn = (card) =>{\n        if (clicked || hasCorrect){\n            return;\n        }\n        setClicked(card);\n        if (cards.length <= 6) {\n            setTimeout(() =>{\n\n            }, 1000);\n        } else{\n            setClicked(null);\n            clickHandler(card);\n        }\n\n    };\n    return (\n        <div>\n            {cards.map((card, index)=>{\n            let classes = 'card';\n            if (card.isCorrect){\n                classes += ' correct'\n\n            } else if (clicked && card.txt === clicked.txt){\n                classes += ' active'\n            }\n\n            return (\n                <div className={ classes } onClick={(e) => {nextTurn(card)\n                }} key={`AC-${index}`}>\n\n                    {rule.cardRender(card)}\n\n                    { (clicked || hasCorrect) &&\n                    <ul>\n                        {Object.entries(displayStats).map( ([key, value]) => <li>{card[value]}</li>)}\n                    </ul>}\n\n                </div>\n        )\n        })}\n            {clicked && <div>\n                <button\n                    onClick={()=>{\n                        clickHandler(clicked);\n                        setClicked(null);\n                }}>\n                    Next\n                </button>\n            </div>}\n        </div>\n    )\n};\n\nexport default GameArea\n","\nimport React from 'react';\nimport Footer from \"./Footer\";\nimport Rules from \"./Rules\"\nimport {getCards} from \"../api/Cards\";\nimport GameArea from \"./GameArea\";\nimport {updateHighScore, updateNumGames } from \"../api/Score\";\n\n\n\nclass GameContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n        this.state  = {\n            selectedSource:'fearless',\n            currentRule:Rules[0],\n            isNot:false,\n            score:0,\n\n        }\n    }\n\n    setupGame() {\n        const apiCards = getCards(this.state.source);\n\n        apiCards.then((possibleCards) =>{\n            shuffle(possibleCards);\n            console.log(possibleCards.length);\n            this.setState({\n                cards: possibleCards,\n                activeCard:possibleCards[0],\n                activeCards:possibleCards.slice(0, 4)\n            });\n        });\n\n    }\n\n    startNewGame() {\n        let state = {\n            endGame: false,\n            currentRule:Rules[0],\n            isNot:false,\n            score:0,\n        };\n\n        let possibleCards = this.state.cards;\n        shuffle(possibleCards);\n        state.card = possibleCards;\n        state.activeCard = possibleCards[0];\n        state.activeCards = possibleCards.slice(0, 4);\n        this.setState(state)\n\n    }\n\n    componentDidMount() {\n        this.setupGame();\n    }\n\n    clickHandler = (obj) =>{\n\n        let isCorrect = this.state.currentRule.rule(\n            obj,\n            this.state.activeCard,\n            this.state.activeCards\n        );\n\n        if (this.state.isNot){\n            isCorrect = !isCorrect\n        }\n        let score = 0;\n        if (isCorrect){\n            score = this.state.score + 1;\n            this.changeRule(score)\n\n        } else {\n            const gradedCards = this.state.activeCards.slice().map((card) => {\n                card.isCorrect = this.state.currentRule.rule(\n                    card,\n                    this.state.activeCard,\n                    this.state.activeCards\n                );\n                if (this.state.isNot){\n                    card.isCorrect = !card.isCorrect\n                }\n                return card\n            });\n            this.setState({activeCards: gradedCards});\n            this.newGame();\n\n        }\n\n\n    };\n\n    changeRule = (score) =>{\n\n        const numRules = Math.min(Rules.length, Math.floor(score / 5));\n        let currentRule = Rules[Math.floor(Math.random() * numRules)];\n        //let currentRule = Rules[4];\n        let possibleCards = this.state.cards;\n        shuffle(possibleCards);\n        let activeCard = possibleCards[0];\n        let activeCards = possibleCards.slice(0, Math.floor(score / 4) + 4);\n        shuffle(activeCards);\n        let isNot = (Math.floor(Math.random() * 10) % 2 === 0);\n\n        this.setState({ score, currentRule, possibleCards, activeCard, activeCards, isNot})\n    };\n\n\n\n    newGame = () =>{\n        const prevScore = this.state.score;\n        updateHighScore(prevScore);\n        updateNumGames();\n        this.setState({prevScore, endGame:true});\n    };\n\n    render() {\n\n        return (\n            this.state.cards ?\n                <React.Fragment>\n                    <div className={'header'}>Fear Not!</div>\n                    {this.state.endGame &&\n\n                    <div >\n                        <div>Great Job.  You scored: {this.state.prevScore}</div>\n                        <button onClick={()=>{this.startNewGame()}}>New Game?</button>\n                    </div>\n\n                    }\n                    <div>\n                        <div className={`rule ${this.state.isNot && 'not'}`}>\n                            {this.state.currentRule.text(this.state.activeCard, this.state.isNot)}\n                        </div>\n                        < GameArea cards={this.state.activeCards} clickHandler={this.clickHandler} rule={this.state.currentRule}/>\n                    </div>\n                    <Footer\n                        score={this.state.score}\n                        prevScore={this.state.prevScore}\n                    />\n\n                </React.Fragment>\n                :\n                <div>Loading</div>\n\n        )\n    }\n}\n\nfunction shuffle(array) {\n    let m = array.length,\n        t,\n        i;\n    while (m) {\n        i = Math.floor(Math.random() * m--);\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n}\n\nexport default GameContainer\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameContainer from \"./components/GameContainer\";\n\nfunction App() {\n  return (\n    <GameContainer/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}