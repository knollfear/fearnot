{"version":3,"sources":["logo.svg","api/Score.js","components/Footer.js","components/Rules.js","api/Cards.js","components/GameArea.js","components/GameContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getHighScore","localStorage","getItem","updateHighScore","prevScore","score","Math","max","setItem","Footer","rule","activeCard","isNot","highScore","className","Rules","text","obj","notNot","txt","cardRender","imgCard","preferredName","firstName","imgPrompt","txtCard","lastName","division","jobTitle","activeCards","lastNames","map","card","sort","possibleCards","slice","firstNames","console","log","length","src","process","photoUrl","alt","displayName","chrisRule","filter","startsWith","endsWith","aTeamRule","getCards","source","a","fetch","response","json","cards","GameArea","clickHandler","displayStats","Name","Herd","Title","useState","clicked","setClicked","hasCorrect","some","isCorrect","index","classes","onClick","e","nextTurn","key","Object","entries","value","shuffle","array","t","i","m","floor","random","GameContainer","props","state","currentRule","changeRule","gradedCards","setState","newGame","numRules","min","numCards","numGames","isNaN","parseInt","updateNumGames","endGame","bind","selectedSource","this","then","forEach","setupGame","Fragment","startNewGame","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3b4cc469.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9b1b5ea4.svg\";","const HIGHSCORE = 'FN_HIGHSCORE';\n\nconst getHighScore = () =>{\n    return localStorage.getItem(HIGHSCORE) || 0\n};\n\nconst setHighScore = score =>{\n\n    localStorage.setItem(HIGHSCORE, score)\n};\n\nconst updateHighScore = prevScore =>{\n    setHighScore(\n        Math.max(\n            prevScore,\n            getHighScore()\n        )\n    )\n};\n\nconst updateNumGames = () =>{\n    let numGames = localStorage.getItem('FN_NUM_GAMES') || '0';\n    numGames = isNaN(numGames) ? 1 : parseInt(numGames, 10) + 1;\n\n    localStorage.setItem('FN_NUM_GAMES', numGames)\n};\n\nexport {\n    getHighScore,\n    setHighScore,\n    updateHighScore,\n    updateNumGames,\n\n}\n","import React from 'react';\nimport {getHighScore} from \"../api/Score\";\n\nconst Footer = ({rule, activeCard, isNot, score, prevScore}) =>{\n\n    const highScore = getHighScore();\n    return(\n        <div className={'footer'}>\n            <div>\n                Current Score: {score}\n            </div>\n            {prevScore &&\n                <div>\n                    Previous Score: {prevScore}\n                </div>\n            }\n            {highScore > 0 &&\n                <div>\n                    High Score: {highScore}\n                </div>\n            }\n\n\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\n\nconst Rules =[\n    {\n        text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.txt}`},\n        rule: (obj, activeCard)=>{\n            return obj.txt === activeCard.txt\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.preferredName || obj.firstName}`},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot, notNot) =>{return imgPrompt(obj, isNot, notNot)},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return txtCard(obj)},\n    },\n    {\n        text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} last name of ${obj.lastName}`},\n        rule: (obj, activeCard)=>{\n            return obj.lastName === activeCard.lastName\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.division}`},\n        rule: (obj, activeCard)=>{\n            return obj.division === activeCard.division\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.jobTitle}`},\n        rule: (obj, activeCard)=>{\n            return obj.jobTitle === activeCard.jobTitle\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not first' : 'First'} (alphabetically by LAST name)`},\n        rule: (obj, activeCard, activeCards)=>{\n            let lastNames = activeCards.map((card)=>{return card.lastName });\n            lastNames.sort();\n            return obj.lastName === lastNames[0];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n        activeCards: (activeCards, possibleCards) =>{ return activeCards.slice(0,4)}\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not first' : 'First'} (alphabetically by FIRST name)`},\n        rule: (obj, activeCard, activeCards)=>{\n            let firstNames = activeCards.map((card)=>{return card.firstName });\n            firstNames.sort();\n            return obj.firstName === firstNames[0];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n        activeCards: (activeCards, possibleCards) =>{ return activeCards.slice(0,4)}\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not last' : 'Last'} (alphabetically by FIRST name)`},\n        rule: (obj, activeCard, activeCards)=>{\n            let firstNames = activeCards.map((card)=>{return card.txt });\n            firstNames.sort();\n            console.log(firstNames[firstNames.length-1]);\n            return obj.txt === firstNames[firstNames.length-1];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n        activeCards: (activeCards, possibleCards) =>{ return activeCards.slice(0,4)}\n    },\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not last' : 'Last'} (alphabetically by LAST name)`},\n        rule: (obj, activeCard, activeCards)=>{\n            let lastNames = activeCards.map((card)=>{return card.lastName });\n            lastNames.sort();\n            return obj.lastName === lastNames[lastNames.length -1];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n        activeCards: (activeCards, possibleCards) =>{ return activeCards.slice(0,4)}\n    },\n\n];\n\nconst imgPrompt = (obj, isNot, notNot) =>{\n    return (\n        <div>\n            {isNot ? 'Not' : notNot ? 'Not Not':''}\n            <img src={process.env.PUBLIC_URL + '/' + obj.photoUrl } alt={obj.displayName}/>\n        </div>\n    )\n};\n\nconst imgCard = (card) =>{\n    return (\n        <img src={process.env.PUBLIC_URL + '/' + card.photoUrl } alt={card.displayName}/>\n    )\n};\n\nconst txtCard = (card) =>{\n    return <button>{card.txt}</button>\n};\n\n\nconst chrisRule = {\n    text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.txt}`},\n    rule: (obj, activeCard)=>{\n        return obj.txt === activeCard.txt\n    },\n    cardRender: (obj) =>{return imgCard(obj)},\n    activeCards: (activeCards, possibleCards) => {return possibleCards.filter( (card) =>{\n        return card.firstName ==='Christopher' &&\n            card.lastName.startsWith('B') &&\n            card.lastName.endsWith('e')\n\n    })}\n    };\n\nconst aTeamRule = {\n    text:(obj, isNot, notNot) =>{return `${isNot ? 'Not' : notNot ? 'Not Not':''} ${obj.txt}`},\n    rule: (obj, activeCard)=>{\n        return obj.txt === activeCard.txt\n    },\n    cardRender: (obj) =>{return imgCard(obj)},\n    activeCards: (activeCards, possibleCards) => {return possibleCards.filter( (card) =>{\n        return card.lastName ==='Barrow';\n\n    })}\n};\n\nexport {Rules, chrisRule, aTeamRule}\n","const getCards = async source =>{\n\n    const response = await fetch(process.env.PUBLIC_URL + `/fearless.json`);\n    const json = await response.json();\n    return json.cards;\n\n};\n\nexport {\n    getCards,\n}\n","import React, { useState } from 'react';\n\nconst GameArea = ({cards, clickHandler, rule}) =>{\n    const displayStats = {\n        Name: 'txt',\n        Herd: 'division',\n        Title: 'jobTitle'\n\n    };\n    const [clicked, setClicked] = useState(null);\n    let hasCorrect = cards.some((card)=>{ return card.isCorrect});\n    const nextTurn = (card) =>{\n        if (clicked || hasCorrect){\n            return;\n        }\n        setClicked(card);\n        if (cards.length > 5) {\n            setClicked(null);\n            clickHandler(card);\n        }\n\n    };\n    return (\n        <div>\n            {cards.map((card, index)=>{\n            let classes = 'card';\n            if (card.isCorrect){\n                classes += ' correct'\n\n            } else if (clicked && card.txt === clicked.txt){\n                classes += ' active'\n            }\n\n            return (\n                <div className={ classes } onClick={(e) => {nextTurn(card)\n                }} key={`AC-${index}`}>\n\n                    {rule.cardRender(card)}\n\n                    { (clicked || hasCorrect) &&\n                    <ul>\n                        {Object.entries(displayStats).map( ([key, value]) => <li>{card[value]}</li>)}\n                    </ul>}\n\n                </div>\n        )\n        })}\n            {clicked && <div>\n                <button\n                    onClick={()=>{\n                        clickHandler(clicked);\n                        setClicked(null);\n                }}>\n                    Next\n                </button>\n            </div>}\n        </div>\n    )\n};\n\nexport default GameArea\n","\nimport React from 'react';\nimport Footer from \"./Footer\";\nimport {Rules, chrisRule, aTeamRule} from \"./Rules\"\nimport {getCards} from \"../api/Cards\";\nimport GameArea from \"./GameArea\";\nimport {updateHighScore, updateNumGames } from \"../api/Score\";\n\n\n\nclass GameContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n        this.state  = {\n            selectedSource:'fearless',\n            currentRule:Rules[0],\n            isNot:false,\n            score:0,\n\n        }\n    }\n\n    setupGame() {\n        const apiCards = getCards(this.state.source);\n\n        apiCards.then((possibleCards) =>{\n            shuffle(possibleCards);\n            console.log(possibleCards.length);\n            this.setState({\n                cards: possibleCards,\n                activeCard:possibleCards[0],\n                activeCards:possibleCards.slice(0, 4)\n            });\n        });\n\n    }\n\n    startNewGame() {\n        let state = {\n            endGame: false,\n            currentRule:Rules[0],\n            isNot:false,\n            score:0,\n        };\n\n        let possibleCards = this.state.cards;\n        shuffle(possibleCards);\n        state.card = possibleCards;\n        state.activeCard = possibleCards[0];\n        state.activeCards = possibleCards.slice(0, 4);\n        state.activeCards.forEach((card) =>{card.isCorrect = false});\n        this.setState(state)\n\n    }\n\n    componentDidMount() {\n        this.setupGame();\n    }\n\n    clickHandler = (obj) =>{\n\n        let isCorrect = this.state.currentRule.rule(\n            obj,\n            this.state.activeCard,\n            this.state.activeCards\n        );\n\n        if (this.state.isNot){\n            isCorrect = !isCorrect\n        }\n        let score = 0;\n        if (isCorrect){\n            score = this.state.score + 1;\n            this.changeRule(score)\n\n        } else {\n            const gradedCards = this.state.activeCards.slice().map((card) => {\n                card.isCorrect = this.state.currentRule.rule(\n                    card,\n                    this.state.activeCard,\n                    this.state.activeCards\n                );\n                if (this.state.isNot){\n                    card.isCorrect = !card.isCorrect\n                }\n                return card\n            });\n            this.setState({activeCards: gradedCards});\n            this.newGame();\n\n        }\n\n\n    };\n\n    changeRule = (score) =>{\n        let isNot = (Math.floor(Math.random() * 10) % 3 === 0);\n        const notNot = score > 20 && !isNot && Math.random() * 10 >=7;\n        const numRules = Math.min(Rules.length, Math.floor(score / 5));\n\n        let currentRule = Rules[Math.floor(Math.random() * numRules)];\n        if ((Math.random() * 50) >= 49){\n            currentRule = chrisRule;\n        } else if ((Math.random() * 50) >= 49){\n            currentRule = aTeamRule\n        }\n        //let currentRule = Rules[4];\n        let possibleCards = this.state.cards;\n        shuffle(possibleCards);\n        let numCards = isNot ? Math.floor(score / 10) + 4 : Math.floor(score / 4) + 4;\n        let activeCards = possibleCards.slice(0, numCards);\n        activeCards = currentRule.activeCards ? currentRule.activeCards(activeCards, possibleCards) : activeCards;\n        let activeCard = activeCards[0];\n        shuffle(activeCards);\n        console.log(activeCards);\n\n        this.setState({ score, currentRule, possibleCards, activeCard, activeCards, isNot, notNot})\n    };\n\n\n\n    newGame = () =>{\n        const prevScore = this.state.score;\n        updateHighScore(prevScore);\n        updateNumGames();\n        this.setState({prevScore, endGame:true});\n    };\n\n    render() {\n\n        return (\n            this.state.cards ?\n                <React.Fragment>\n                    <div className={'header'}>Fear Not!</div>\n                    {this.state.endGame &&\n\n                    <div >\n                        <div>Great Job.  You scored: {this.state.prevScore}</div>\n                        <button onClick={()=>{this.startNewGame()}}>New Game?</button>\n                    </div>\n\n                    }\n                    <div>\n                        <div className={`rule ${this.state.isNot && 'not'}`}>\n                            {this.state.currentRule.text(this.state.activeCard, this.state.isNot, this.state.notNot)}\n                        </div>\n                        < GameArea cards={this.state.activeCards} clickHandler={this.clickHandler} rule={this.state.currentRule}/>\n                    </div>\n                    <Footer\n                        score={this.state.score}\n                        prevScore={this.state.prevScore}\n                    />\n\n                </React.Fragment>\n                :\n                <div>Loading</div>\n\n        )\n    }\n}\n\nfunction shuffle(array) {\n    let m = array.length,\n        t,\n        i;\n    while (m) {\n        i = Math.floor(Math.random() * m--);\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n}\n\nexport default GameContainer\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameContainer from \"./components/GameContainer\";\n\nfunction App() {\n  return (\n    <GameContainer/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}