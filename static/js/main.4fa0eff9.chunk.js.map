{"version":3,"sources":["logo.svg","api/Score.js","components/Footer.js","components/Rules.js","api/Cards.js","components/GameArea.js","components/GameContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getHighScore","localStorage","getItem","updateHighScore","prevScore","score","Math","max","setItem","Footer","rule","activeCard","isNot","highScore","className","text","Rules","obj","preferredName","firstName","cardRender","imgCard","imgPrompt","txtCard","lastName","division","jobTitle","activeCards","lastNames","map","card","sort","src","process","photoUrl","alt","displayName","txt","getCards","source","a","fetch","response","json","cards","GameArea","clickHandler","index","onClick","key","shuffle","array","t","i","m","length","floor","random","GameContainer","props","isCorrect","state","currentRule","changeRule","newGame","numRules","min","possibleCards","slice","console","log","setState","numGames","isNaN","parseInt","updateNumGames","endGame","bind","selectedSource","this","then","setupGame","Fragment","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4fa0eff9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const HIGHSCORE = 'FN_HIGHSCORE';\n\nconst getHighScore = () =>{\n    return localStorage.getItem(HIGHSCORE) || 0\n};\n\nconst setHighScore = score =>{\n\n    localStorage.setItem(HIGHSCORE, score)\n};\n\nconst updateHighScore = prevScore =>{\n    setHighScore(\n        Math.max(\n            prevScore,\n            getHighScore()\n        )\n    )\n};\n\nconst updateNumGames = () =>{\n    let numGames = localStorage.getItem('FN_NUM_GAMES') || '0';\n    numGames = isNaN(numGames) ? 1 : parseInt(numGames, 10) + 1;\n\n    localStorage.setItem('FN_NUM_GAMES', numGames)\n};\n\nexport {\n    getHighScore,\n    setHighScore,\n    updateHighScore,\n    updateNumGames,\n\n}\n","import React from 'react';\nimport {getHighScore} from \"../api/Score\";\n\nconst Footer = ({rule, activeCard, isNot, score, prevScore}) =>{\n\n    const highScore = getHighScore();\n    return(\n        <div className={'footer'}>\n            <div>\n                {rule.text(activeCard, isNot)}\n            </div>\n            <div>\n                Current Score: {score}\n            </div>\n            {prevScore &&\n                <div>\n                    Previous Score: {prevScore}\n                </div>\n            }\n            {highScore > 0 &&\n                <div>\n                    High Score: {highScore}\n                </div>\n            }\n\n\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\n\nconst Rules =[\n\n    {\n        text:(obj, isNot) =>{return `Click on ${isNot ? 'not' : ''} ${obj.preferredName || obj.firstName}`},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return imgPrompt(obj, isNot)},\n        rule: (obj, activeCard)=>{\n            return (obj.preferredName || obj.firstName) === (activeCard.preferredName || activeCard.firstName)\n        },\n        cardRender: (obj) =>{return txtCard(obj)},\n    },\n\n    {\n        text:(obj, isNot) =>{return `Click on ${isNot ? 'not' : ''} last name of ${obj.lastName}`},\n        rule: (obj, activeCard)=>{\n            return obj.lastName === activeCard.lastName\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `Click on ${isNot ? 'not' : ''} ${obj.division}`},\n        rule: (obj, activeCard)=>{\n            return obj.division === activeCard.division\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n    {\n        text:(obj, isNot) =>{return `Click on ${isNot ? 'not' : ''} ${obj.jobTitle}`},\n        rule: (obj, activeCard)=>{\n            return obj.jobTitle === activeCard.jobTitle\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n\n    {\n        text:(obj, isNot) =>{return `${isNot ? 'Not first' : 'First'} alphabetically by last name`},\n        rule: (obj, activeCard, activeCards)=>{\n            let lastNames = activeCards.map((card)=>{return card.lastName });\n            lastNames.sort();\n            return obj.lastName === lastNames[0];\n\n        },\n        cardRender: (obj) =>{return imgCard(obj)},\n    },\n\n];\n\nconst imgPrompt = (obj, isNot) =>{\n    return (\n        <div>\n            Click on {isNot ? 'not' : ''}\n            <img src={process.env.PUBLIC_URL + '/' + obj.photoUrl } alt={obj.displayName}/>\n        </div>\n    )\n};\n\nconst imgCard = (card) =>{\n    return (\n        <img src={process.env.PUBLIC_URL + '/' + card.photoUrl } alt={card.displayName}/>\n    )\n};\n\nconst txtCard = (card) =>{\n    return <button>{card.txt}</button>\n};\n\nexport default  Rules;\n","const getCards = async source =>{\n\n    const response = await fetch(process.env.PUBLIC_URL + `/fearless.json`);\n    const json = await response.json();\n    return json.cards;\n\n};\n\nexport {\n    getCards,\n}\n","import React from 'react';\n\nconst GameArea = ({cards, clickHandler, rule}) =>{\n\n    return cards.map((card, index)=>{\n        return (\n            <span onClick={() => clickHandler(card)} key={index}>\n                {rule.cardRender(card)}\n            </span>\n    )\n    })\n};\n\nexport default GameArea\n","\nimport React from 'react';\nimport Footer from \"./Footer\";\nimport Rules from \"./Rules\"\nimport {getCards} from \"../api/Cards\";\nimport GameArea from \"./GameArea\";\nimport {updateHighScore, updateNumGames } from \"../api/Score\";\n\n\n\nclass GameContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.clickHandler = this.clickHandler.bind(this);\n        this.state  = {\n            selectedSource:'fearless',\n            currentRule:Rules[0],\n            isNot:false,\n            score:0,\n\n        }\n    }\n\n    setupGame() {\n        const apiCards = getCards(this.state.source);\n\n        apiCards.then((possibleCards) =>{\n            shuffle(possibleCards);\n\n            this.setState({\n                cards: possibleCards,\n                activeCard:possibleCards[0],\n                activeCards:possibleCards.slice(0, 4)\n            });\n        });\n\n    }\n    componentDidMount() {\n        this.setupGame();\n    }\n\n    clickHandler = (obj) =>{\n\n        let isCorrect = this.state.currentRule.rule(\n            obj,\n            this.state.activeCard,\n            this.state.activeCards\n        );\n        if (this.state.isNot){\n            isCorrect = !isCorrect\n        }\n        let score = 0;\n        if (isCorrect){\n            score = this.state.score + 1\n\n        }\n        this.changeRule(score)\n    };\n\n    changeRule = (score) =>{\n\n        if (score === 0){\n            this.newGame();\n        }\n        const numRules = Math.min(Rules.length, Math.floor(score/5));\n        let currentRule = Rules[Math.floor(Math.random() * numRules)];\n        //let currentRule = Rules[4];\n        let possibleCards = this.state.cards;\n        shuffle(possibleCards);\n        let activeCard = possibleCards[0];\n        let activeCards = possibleCards.slice(0,Math.floor(score/4) + 4);\n        shuffle(activeCards);\n        let isNot = (Math.floor(Math.random() * 10) % 2 === 0);\n        console.log(isNot);\n        this.setState({score, currentRule, possibleCards, activeCard, activeCards, isNot})\n    };\n\n    newGame = () =>{\n        const prevScore = this.state.score;\n        updateHighScore(prevScore);\n        updateNumGames();\n        this.setState({prevScore, endGame:true});\n    };\n\n    render() {\n\n        return (\n            this.state.cards ?\n                <React.Fragment>\n                    <div className={'header'}>Fear Not!</div>\n                    {this.state.endGame ?\n\n                        <div >\n                            <div>Great Job.  You scored: {this.state.prevScore}</div>\n                            <button onClick={()=>{this.setState({endGame:false})}}>New Game?</button>\n                        </div>\n                        :\n                        <React.Fragment>\n                            < GameArea cards={this.state.activeCards} clickHandler={this.clickHandler} rule={this.state.currentRule}/>\n                            <Footer\n                                rule={this.state.currentRule}\n                                isNot={this.state.isNot}\n                                activeCard={this.state.activeCard}\n                                score={this.state.score}\n                                prevScore={this.state.prevScore}\n                            />\n                        </React.Fragment>\n                    }\n\n                </React.Fragment>\n                :\n                <div>Loading</div>\n\n        )\n    }\n}\n\nfunction shuffle(array) {\n    let m = array.length,\n        t,\n        i;\n    while (m) {\n        i = Math.floor(Math.random() * m--);\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n}\n\nexport default GameContainer\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GameContainer from \"./components/GameContainer\";\n\nfunction App() {\n  return (\n    <GameContainer/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}